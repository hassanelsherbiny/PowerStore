@model CheckoutConfirmModel
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_ColumnsOne";

    //title
    pagebuilder.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page order-confirm-page">
    @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Confirm })
    <div class="confirm-order">
        <form asp-route="CheckoutConfirm" method="post" id="confirm-order-form">
            <h2 class="text-center generalTitle">@T("Checkout.ConfirmYourOrder")</h2>
            <div class="page-body checkout-data">
                @await Component.InvokeAsync("Widget", new { widgetZone = "checkout_confirm_top" })
                <div class="order-summary">
                    <partial name="OrderSummary" model="null" />
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = "checkout_confirm_bottom" })
            </div>

            @if (!String.IsNullOrEmpty(Model.MinOrderTotalWarning))
            {
                <span class="min-order-warning">@Model.MinOrderTotalWarning</span>
            }
            else
            {
                <div class="row m-0">
                    <div class="col-lg-1 col-sm-2 col-12  ml-auto mb-1 buttons">
                        <div class="row">
                            @if (Model.TermsOfServiceOnOrderConfirmPage)
                            {
                                <input type="submit" name="nextstep" @@click="vmorder.showMsgBoxOne" value="@T("Checkout.ConfirmButton")" class="btn btn-info btn-block confirm-order-next-step-button" />
                            }
                            else
                            {
                                <input type="submit" name="nextstep" @@click="document.querySelector('#confirm-order-form').submit();" value="@T("Checkout.ConfirmButton")" class="btn btn-info btn-block confirm-order-next-step-button" />
                            }
                        </div>
                    </div>
                </div>
            }
            @if (Model.Warnings.Any())
            {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
            }
        </form>
    </div>
</div>